# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# mkdocs documentation
/site

# mypy
.mypy_cache/

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Poetry
#   According to pypa/pipenv, it is recommended to include poetry.lock in version control.
#   However, in case of collaboration, if having poetry.lock is causing issues, then
#   the recommendation is to include .venv in your .gitignore
# https://python-poetry.org/docs/basic-usage/#gitignore
poetry.lock

# Poetry cache
# .poetry/artifacts/

# pycache
__pycache__/

# pytest
__pytest_cache__/

# virtualenv
# .venv/

# vscode
.vscode/
